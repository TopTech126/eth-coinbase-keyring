{"version":3,"file":"coinbase-keyring.js","sourceRoot":"","sources":["../src/coinbase-keyring.ts"],"names":[],"mappings":"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","sourcesContent":["import { CoinbaseWalletProvider } from '@coinbase/wallet-sdk/dist/provider/CoinbaseWalletProvider';\nimport { Session } from '@coinbase/wallet-sdk/dist/relay/Session';\nimport {\n  WalletLinkRelay,\n  WalletLinkRelayOptions,\n} from '@coinbase/wallet-sdk/dist/relay/WalletLinkRelay';\nimport { WalletSDKRelayEventManager } from '@coinbase/wallet-sdk/dist/relay/WalletSDKRelayEventManager';\nimport { LIB_VERSION } from '@coinbase/wallet-sdk/dist/version';\nimport {\n  TypedTransaction,\n  JsonTx,\n  Transaction,\n  FeeMarketEIP1559Transaction,\n} from '@ethereumjs/tx';\nimport { Hex, Keyring, numberToHex } from '@metamask/utils';\n// eslint-disable-next-line import/no-nodejs-modules\nimport EventEmitter from 'events';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { v4 as uuid } from 'uuid';\n\nimport { HeadlessUI } from './relay-ui';\nimport { MemoryStorage } from './storage';\nimport { KeyringOptions, KeyringOpt, SESSION_STATUS_MAP } from './type';\n\nconst TYPE = 'Coinbase';\n\nexport const LINK_API_URL = 'https://www.walletlink.org';\n\ntype SessionData = {\n  id: string;\n  account?: Hex;\n  chainId?: number;\n  provider: CoinbaseWalletProvider;\n  status: keyof typeof SESSION_STATUS_MAP;\n};\n\nexport default class CoinbaseKeyring\n  extends EventEmitter\n  implements Keyring<KeyringOptions>\n{\n  #accounts: Hex[];\n\n  #sessions: Record<Session['id'], SessionData> = {};\n\n  readonly type: string = TYPE;\n\n  static type: string = TYPE;\n\n  accountToAdd?: string;\n\n  constructor(options: KeyringOptions = {}) {\n    super();\n    this.#accounts = [];\n\n    /* istanbul ignore next: It's not possible to write a unit test for this, because a constructor isn't allowed\n     * to be async. Jest can't await the constructor, and when the error gets thrown, Jest can't catch it. */\n    this.deserialize(options).catch((error: Error) => {\n      throw new Error(`Problem deserializing CoinbaseKeyring ${error.message}`);\n    });\n  }\n\n  async serialize() {\n    return Promise.resolve({\n      accounts: this.#accounts,\n    });\n  }\n\n  async deserialize(options: KeyringOptions) {\n    if (options.accounts) {\n      this.#accounts = options.accounts;\n    }\n  }\n\n  setAccountToAdd(account: string) {\n    this.accountToAdd = account.toLowerCase();\n  }\n\n  async addAccounts() {\n    if (!this.accountToAdd) {\n      throw new Error('No account to add');\n    }\n    if (this.#accounts.find((a) => a.toLowerCase() === this.accountToAdd)) {\n      const sessionData = Object.values(this.#sessions).find(\n        (data) => data.account?.toLowerCase() === this.accountToAdd,\n      );\n\n      if (sessionData) {\n        this.#emit(sessionData, 'ADDRESS_DUPLICATE');\n        sessionData.provider.disconnect();\n      }\n      throw new Error(\"The address you're are trying to import is duplicate\");\n    }\n\n    this.#accounts.push(this.accountToAdd as Hex);\n\n    return Promise.resolve(this.#accounts);\n  }\n\n  async getAccounts() {\n    return Promise.resolve(this.#accounts);\n  }\n\n  async signTransaction(\n    address: Hex,\n    transaction: TypedTransaction,\n  ): Promise<any> {\n    const sessionData = Object.values(this.#sessions).find(\n      (data) => data.account?.toLowerCase() === address.toLowerCase(),\n    );\n\n    if (!sessionData) {\n      throw new Error('No session data found');\n    }\n\n    const { provider } = sessionData;\n\n    const txData: JsonTx = {\n      to: transaction.to?.toString() as string,\n      value: `0x${(transaction.value as unknown as Buffer).toString('hex')}`,\n      data: `0x${transaction.data.toString('hex')}`,\n      nonce: `0x${(transaction.nonce as unknown as Buffer).toString('hex')}`,\n      gasLimit: `0x${(transaction.gasLimit as unknown as Buffer).toString(\n        'hex',\n      )}`,\n      gasPrice: `0x${\n        (transaction as Transaction).gasPrice\n          ? (\n              (transaction as Transaction).gasPrice as unknown as Buffer\n            ).toString('hex')\n          : (\n              (transaction as FeeMarketEIP1559Transaction)\n                .maxFeePerGas as unknown as Buffer\n            ).toString('hex')\n      }`,\n    };\n    const tx = await provider.request<string>({\n      method: 'eth_sendTransaction',\n      params: [txData],\n    });\n\n    return tx;\n  }\n\n  async signMessage(address: Hex, message: string): Promise<string> {\n    const sessionData = Object.values(this.#sessions).find(\n      (data) => data.account?.toLowerCase() === address.toLowerCase(),\n    );\n\n    if (!sessionData) {\n      throw new Error('No session data found');\n    }\n\n    const { provider } = sessionData;\n\n    const response = await provider.request<string>({\n      method: 'eth_sign',\n      params: [address, message],\n    });\n\n    return response;\n  }\n\n  // For personal_sign, we need to prefix the message:\n  async signPersonalMessage(address: Hex, msgHex: Hex) {\n    const sessionData = Object.values(this.#sessions).find(\n      (data) => data.account?.toLowerCase() === address.toLowerCase(),\n    );\n\n    if (!sessionData) {\n      throw new Error('No session data found');\n    }\n\n    const { provider } = sessionData;\n\n    const response = await provider.request<string>({\n      method: 'personal_sign',\n      params: [msgHex, address],\n    });\n\n    return response;\n  }\n\n  // personal_signTypedData, signs data along with the schema\n  async signTypedData(\n    address: Hex,\n    typedData: any,\n    opts: KeyringOpt = {\n      version: 'V1',\n    },\n  ) {\n    const sessionData = Object.values(this.#sessions).find(\n      (data) => data.account?.toLowerCase() === address.toLowerCase(),\n    );\n\n    if (!sessionData) {\n      throw new Error('No session data found');\n    }\n\n    const { provider } = sessionData;\n\n    const method = `eth_signTypedData_${opts.version?.toLowerCase() ?? 'v1'}`;\n\n    const response = await provider.request<string>({\n      method,\n      params:\n        opts.version === 'V1' ? [[typedData], address] : [address, typedData],\n    });\n\n    return response;\n  }\n\n  removeAccount(address: string) {\n    this.#accounts = this.#accounts.filter(\n      (account) => account.toLowerCase() !== address.toLowerCase(),\n    );\n\n    Object.entries(this.#sessions).find(([_, sessionData]) => {\n      if (sessionData.account?.toLowerCase() === address.toLowerCase()) {\n        sessionData.provider.disconnect();\n        return true;\n      }\n      return false;\n    });\n  }\n\n  #initRelay(opts: { address?: string; appName: string; appIcon: string }) {\n    const relayEventManager = new WalletSDKRelayEventManager();\n    const id = uuid();\n    const storage = new MemoryStorage(\n      `coinbase:${id}`,\n    ) as unknown as WalletLinkRelayOptions['storage'];\n\n    const defaultRelayOptions: WalletLinkRelayOptions = {\n      linkAPIUrl: LINK_API_URL,\n      version: LIB_VERSION,\n      darkMode: false,\n      storage,\n      relayEventManager,\n      uiConstructor: () => new HeadlessUI(),\n      reloadOnDisconnect: false,\n    };\n    const defaultChainId = 1;\n    const relay = new WalletLinkRelay(defaultRelayOptions);\n    const provider = new CoinbaseWalletProvider({\n      relayProvider: async () => Promise.resolve(relay),\n      relayEventManager,\n      storage,\n      jsonRpcUrl: '',\n      chainId: defaultChainId,\n      qrUrl: relay.getQRCodeUrl(),\n      overrideIsCoinbaseWallet: true,\n      overrideIsCoinbaseBrowser: true,\n      overrideIsMetaMask: true,\n    });\n    relay.setAppInfo(opts.appName, opts.appIcon);\n\n    this.#sessions[relay.session.id] = {\n      provider,\n      status: 'DISCONNECTED',\n      chainId: defaultChainId,\n      id: relay.session.id,\n    };\n\n    return { relay, provider };\n  }\n\n  connect(opts?: { address?: string; appName?: string; appIcon?: string }) {\n    const options = {\n      appName: 'Lux',\n      appIcon:\n        'https://static-assets.lux.io/files/122da969-da58-42e9-ab39-0a8dd38d94b8.png',\n      ...opts,\n    };\n    const { provider, relay } = this.#initRelay(options);\n\n    provider.on('disconnect', () => {\n      const sessionData = this.#sessions[relay.session.id];\n      if (sessionData) {\n        this.#emit(sessionData, 'DISCONNECTED');\n      }\n    });\n\n    provider.on('accountsChanged', (accounts: any) => {\n      const sessionData = this.#sessions[relay.session.id];\n\n      if (!sessionData) {\n        return;\n      }\n      const account = accounts[0];\n\n      if (sessionData.account) {\n        if (sessionData.account?.toLowerCase() !== account.toLowerCase()) {\n          this.#emit(sessionData, 'ACCOUNT_ERROR');\n          return;\n        }\n        if (sessionData.status !== 'CONNECTED') {\n          this.#emit(sessionData, 'CONNECTED');\n        }\n      }\n    });\n\n    provider.on('chainChanged', (chainId) => {\n      const sessionData = this.#sessions[relay.session.id];\n      if (sessionData?.account) {\n        sessionData.chainId = chainId;\n        this.#emit(sessionData, 'CHAIN_CHANGED');\n      }\n    });\n\n    provider.on('message', (info) => {\n      console.log('message', info);\n    });\n\n    provider\n      .request({\n        method: 'eth_requestAccounts',\n      })\n      .then((accounts: any) => {\n        const sessionData = this.#sessions[relay.session.id];\n        const account = accounts[0];\n        if (sessionData) {\n          if (\n            opts?.address &&\n            opts.address.toLowerCase() !== account.toLowerCase()\n          ) {\n            sessionData.account = opts.address as Hex;\n            this.#emit(sessionData, 'ACCOUNT_ERROR');\n            this.closeConnector({ address: sessionData.account }, true);\n            return;\n          }\n          sessionData.account = account;\n          this.#emit(sessionData, 'CONNECTED');\n        }\n      })\n      .catch((error) => {\n        delete this.#sessions[relay.session.id];\n        console.error(error);\n      });\n\n    return provider.qrUrl;\n  }\n\n  #emit(\n    sessionData: SessionData,\n    status: keyof typeof SESSION_STATUS_MAP,\n    payload?: object,\n  ) {\n    sessionData.status = status;\n\n    this.emit('message', {\n      ...payload,\n      status,\n      account: sessionData?.account,\n      chainId: sessionData.chainId,\n      address: sessionData?.account,\n      brandName: TYPE,\n    });\n  }\n\n  getSessionStatus(address: string) {\n    const sessionData = Object.values(this.#sessions).find(\n      (data) => data.account?.toLowerCase() === address.toLowerCase(),\n    );\n\n    return sessionData?.status;\n  }\n\n  getSessionAccount(address: string) {\n    const sessionData = Object.values(this.#sessions).find(\n      (data) => data.account?.toLowerCase() === address.toLowerCase(),\n    );\n\n    return {\n      chainId: sessionData?.chainId,\n      account: sessionData?.account,\n      status: sessionData?.status,\n    };\n  }\n\n  closeConnector({ address }: { address: string }, silent: boolean) {\n    const sessionData = Object.values(this.#sessions).find(\n      (data) => data.account?.toLowerCase() === address.toLowerCase(),\n    );\n\n    if (sessionData) {\n      sessionData.provider.disconnect();\n      sessionData.status = 'DISCONNECTED';\n      delete this.#sessions[sessionData.id];\n      if (!silent) {\n        this.#emit(sessionData, 'DISCONNECTED');\n      }\n    }\n  }\n\n  async switchEthereumChain(_: string, chainId: number, address: string) {\n    const sessionData = Object.values(this.#sessions).find(\n      (data) => data.account?.toLowerCase() === address.toLowerCase(),\n    );\n\n    if (sessionData) {\n      sessionData.provider\n        .request({\n          method: 'wallet_switchEthereumChain',\n          params: [\n            {\n              chainId: numberToHex(chainId),\n            },\n          ],\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  }\n}\n"]}